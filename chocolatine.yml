name: Chocolatine CI/CD

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:

env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-LIL-2-1-chocolatine-silas.defossez.git"
  EXECUTABLES: "mysh"

jobs:
  is_mirror_repo:
    runs-on: ubuntu-latest
    outputs:
      is_mirror: ${{ steps.cond_repo.outputs.is_mirror }}
    steps:
      - name: Check mirror repository
        id: cond_repo
        run: |
          if [ "git@github.com:${{ github.repository }}.git" == "$MIRROR_URL" ]; then
            echo "is_mirror=true" >> $GITHUB_OUTPUT
          else
            echo "is_mirror=false" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Take_files
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Check_coding_style_errors
        run: check.sh $(pwd) $(pwd);

      - name: Display_errors
        if: ${{ hashFiles('coding-style-reports.log') != '' }}
        shell: bash
        run: |
          if [ ! -s coding-style-reports.log ]; then
            echo "No coding style error."
            exit 0
          fi
          while IFS= read -r i; do
            file=$(echo "$i" | cut -d':' -f 1)
            line_number=$(echo "$i" | cut -d':' -f 2)
            error_message=$(echo "$i" | cut -d':' -f 3-)
            echo "::error file=$file,line=$line_number::$error_message"
          done < coding-style-reports.log
          exit 84

  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    if: ${{ needs.is_mirror_repo.outputs.is_mirror == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compile project
        timeout-minutes: 2
        run: make
      - name: Clean project
        run: make clean
      - name: Verify executables exist and are executable
        run: |
          for exec in $(echo $EXECUTABLES | tr "," "\n"); do
            if [ ! -x "$exec" ]; then
              echo "::error file=$exec::Executable $exec is missing or not executable"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_program_compilation
    if: ${{ needs.is_mirror_repo.outputs.is_mirror == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run tests
        timeout-minutes: 2
        run: make tests_run

  push_to_mirror:
    name: Push to Mirror Repository
    runs-on: ubuntu-latest
    needs: run_tests
    if: ${{ needs.is_mirror_repo.outputs.is_mirror == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.SECRET_KEY }}
